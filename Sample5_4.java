//Scannerクラス
//スキャナの入力ストリームにまだ値が残っているか確認する(Scanner.hasNext)

class Sample5_4{
  public static void main(String[] args){

    //入力ストリームに標準入力を指定した場合の注意点
    /*
     ここまで解説したように hasNext メソッドを使うと入力ストリームに取得できる値があるかどうかを調べることができますが、スキャナの入力ストリームとして標準入力を指定している場合は注意が必要です。

次のサンプルを見てください。

import java.util.Scanner;

class JSample6_6{
  public static void main(String[] args){

    Scanner scanner = new Scanner(System.in);

    while (scanner.hasNext()){
      System.out.println(scanner.next());
    }
  }
}

プログラムを実行すると最初の hasNext メソッドによってキーボードからの入力待ちとなります。

入力ストリームに標準入力を指定した場合の注意点(1)

ここでキーボードから "AB BC CA" と入力し、 Enter キーを押すとキーボードからの入力が完了し、区切り文字までの値を順に取得して画面に表示したあと再びキーボードからの入力待ちとなります。

入力ストリームに標準入力を指定した場合の注意点(2)

これは入力ストリームが標準入力の場合、取得できる値がない状態で hasNext メソッドを呼び出すと再びキーボードからの入力待ちとなるためです。キーボードから入力を行うと繰り返し処理が継続されるためいつまでも繰り返し処理が終わりません。

なおこの状態でもキーボードから Ctrl + キーを押すたあとで Enter キーを押すと繰り返し処理が終了します。

入力ストリームに標準入力を指定した場合の注意点(3)

キーボードからの入力に対して、区切り文字までの値を順に取り出して処理したい場合には、行単位で取得したあとで取得した値を分割するようにされてみてください。具体的な手順は「区切り文字を無視して次の行までの値を受け取る」を参照されてください。

-- -- 
    */
  }
}

//実行結果
/*


*/
